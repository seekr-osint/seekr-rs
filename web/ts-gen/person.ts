// Code generated by tygo. DO NOT EDIT.
import * as enums from "enums.js"
import * as services from "services.js"
import * as hobbies from "hobbies.js"
import * as ips from "ips.js"
import * as clubs from "clubs.js"
import * as sources from "sources.js"
import * as phone from "phone.js"
import * as email from "email.js"

//////////
// source: types.go
/*
Data Structure stored in the DataBase

The person package is used to define a person entry, the main data structure seekr works with.
*/

/**
 * Person type representing a single person.
 */
export interface Person {
  id: number /* uint */; // maybe exploit to overwrite other users data
  name: string;
  age: number;
  maidenname: string;
  kids: string;
  bday: string;
  address: string;
  occupation: string;
  prevoccupation: string;
  education: string;
  military: string;
  pets: string;
  legal: string;
  political: string;
  notes: string;
  accounts: services.MapServiceCheckResult;
  phone: phone.PhoneNumbers;
  email: email.Emails;
  hobbies: hobbies.Hobbies;
  clubs: clubs.Clubs;
  sources: sources.Sources;
  ips: ips.IPs;
  gender: enums.GenderEnum;
  ethnicity: enums.EthnicityEnum;
  civilstatus: enums.CivilstatusEnum;
  religion: enums.ReligionEnum;
}
