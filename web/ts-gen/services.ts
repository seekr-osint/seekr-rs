// Code generated by tygo. DO NOT EDIT.

//////////
// source: services.go

export interface Player {
  avatar: string;
  player_id: number /* int */;
  '@id': string;
  url: string;
  name: string;
  username: string;
  followers: number /* int */;
  country: string;
  location: string;
  last_online: number /* int64 */;
  joined: number /* int64 */;
  status: string;
  is_streamer: boolean;
  verified: boolean;
}

//////////
// source: types.go

export type Services = Service[];
export interface Service {
  name: string;
  domain: string;
}
export interface TestData {
  ExistingUser: string;
  NotExistingUser: string;
}
export interface User {
  Username: string;
}
export interface Template {
  User: User;
  Service: Service;
}
export interface Errors {
  exists: string;
  info: string;
}
export type ServiceCheckResults = ServiceCheckResult[];
export interface InputData {
  user: User;
  service: Service;
}
export interface Accounts {
  existing: MapServiceCheckResult;
  failed: MapServiceCheckResult;
}
export type MapServiceCheckResult = { [key: string]: ServiceCheckResult};
export interface ServiceCheckResult {
  input_data: InputData;
  exists: boolean;
  info: AccountInfo;
  errors: Errors;
}
export interface Image {
  Img: string;
  Url: string;
  Date: string;
}
export interface AccountInfo {
  url: string;
  profile_picture: { latest: { data: string } };
  bio: { latest: { data: {bio: string} } };
}
export interface Bio {
  bio: string;
  language: { [key: string]: number /* float64 */};
}
export type DataToCheck = UserServiceDataToCheck[];
export interface UserServiceDataToCheck {
  user: User;
  service: Service;
}
